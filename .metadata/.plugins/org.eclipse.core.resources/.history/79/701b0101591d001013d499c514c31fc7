package com.hotel.api;

import org.springframework.boot.ApplicationRunner;
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Profile;
import org.springframework.security.crypto.password.PasswordEncoder;

import com.hotel.api.entity.Role;
import com.hotel.api.entity.Room;
import com.hotel.api.entity.User;
import com.hotel.api.entity.enums.RoomType;
import com.hotel.api.repository.RoleRepository;
import com.hotel.api.repository.RoomRepository;
import com.hotel.api.repository.UserRepository;

import lombok.RequiredArgsConstructor;

@SpringBootApplication
@RequiredArgsConstructor
public class HotelApiApplication {
	
	public final RoomRepository roomRepository;
	public final UserRepository userRepository;
	public final PasswordEncoder passwordEncoder;
	public final RoleRepository roleRepository;

    @Bean //@Profile("dev")
    ApplicationRunner init() {
		return args -> {
			
			Role developer = new Role("ROLE_DEVELOPER");
			Role admin = new Role("ROLE_ADMIN");
			Role user = new Role("ROLE_USER");
			
			User devUsr = new User("dev", "dev@gmail.com", passwordEncoder.encode("12345"));
			devUsr.addRole(developer);
			devUsr.addRole(admin);
			
			User adminUsr = new User("admin", "admin@gmail.com", passwordEncoder.encode("12345"));
			adminUsr.addRole(admin);
			
			User usr = new User("user", "user@gmail.com", passwordEncoder.encode("12345"));
			usr.addRole(user);
			
			roleRepository.save(developer);
			roleRepository.save(admin);
			roleRepository.save(user);
			
			userRepository.save(devUsr);
			userRepository.save(adminUsr);
			userRepository.save(usr);
			
			
			for(int i = 1; i <= 15; i++) {
				Room standardRoom = new Room("S-" + i,RoomType.Standard);
				Room doubleRoom = new Room("D-" + i,RoomType.Double);
				Room twinRoom = new Room("T-" + i,RoomType.Twin);
				
				roomRepository.save(standardRoom);
				roomRepository.save(doubleRoom);
				roomRepository.save(twinRoom);
			}
			
			for(int i = 1; i <= 10; i++) {
				Room familyRoom = new Room("F-" + i,RoomType.Family);
				Room queenRoom = new Room("Q-" + i,RoomType.Queen);
				Room kingRoom = new Room("K-" + i,RoomType.King);
				
				roomRepository.save(familyRoom);
				roomRepository.save(queenRoom);
				roomRepository.save(kingRoom);
			}
			
			for(int i = 1; i <= 5; i++) {
				Room suiteRoom = new Room("Su-" + i,RoomType.Suite);
				Room penthouseRoom = new Room("P-" + i,RoomType.Penthouse);
				Room villaRoom = new Room("V-" + i,RoomType.Villa);
				
				roomRepository.save(suiteRoom);
				roomRepository.save(penthouseRoom);
				roomRepository.save(villaRoom);
			}
		};
	}

	public static void main(String[] args) {
		SpringApplication.run(HotelApiApplication.class, args);
	}

}
